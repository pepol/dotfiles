" Section: General Settings {{{

set nocompatible
set nowrap
set nohlsearch
set backspace=indent,eol,start
set nobackup
set showmatch
syntax on
set ruler
set showcmd
set modelines=1
set ff=unix
set ffs=unix,dos
set sw=2 sts=2 ts=2 et
set bg=dark
set encoding=utf-8

set colorcolumn=80

set updatetime=100

set sessionoptions+=tabpages,globals

packadd! matchit

" }}}

" Section: Autocmd {{{

command! GoFmt silent %!gofmt

if has("autocmd")
  filetype plugin indent on
  augroup vimrcEx
  autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \ exe "normal g`\"" |
    \ endif
  augroup END
"  autocmd BufWritePre *.go GoFmt
  au BufRead,BufNewFile *.go set filetype=go
  au BufRead,BufNewFile *.tf set filetype=terraform
  au BufRead,BufNewFile *.hcl set filetype=terraform
  autocmd FileType python set sw=4 sts=4 ts=4 et
  autocmd FileType go set sw=8 sts=8 ts=8 noet
  autocmd FileType yaml set sw=2 sts=2 ts=2 et
  autocmd FileType yaml setlocal indentkeys-=0#
else
  set autoindent
endif

let g:cue_fmt_on_save=0
let g:slime_target = "tmux"
let g:slime_no_mappings = 1
let g:ale_completion_enabled = 1
let g:ale_set_quickfix = 1
let g:ale_lint_on_text_changed = 'never'

set omnifunc=ale#completion#OmniFunc
set number

" }}}

" Section: Folding {{{

set foldenable
set foldlevelstart=99
set foldnestmax=10

set foldmethod=indent

" }}}

" Section: Shortcuts {{{

let mapleader = ","
let maplocalleader = "\\"

noremap <Up> <nop>
noremap <Down> <nop>
noremap <Left> <nop>
noremap <Right> <nop>

" Normal Mode
nmap <leader>n :set invnumber<CR>
nnoremap <space> za
nmap <leader>T :enew<CR>
nmap <leader>l :bnext<CR>
nmap <leader>h :bprevious<CR>
nmap <leader>bq :bp <BAR> bd #<CR>
nmap <leader>bl :ls<CR>

"" CtrlP
noremap <leader>p :CtrlP<CR>

"" ALE
noremap <leader>lc <Plug>(ale_code_action)
noremap <leader>lr <Plug>(ale_rename)
noremap K <Plug>(ale_hover)
noremap gr <Plug>(ale_find_references)
noremap <leader>li <Plug>(ale_go_to_implementation)
noremap <leader>lt <Plug>(ale_go_to_type_definition)
noremap gd <Plug>(ale_go_to_definition)
noremap [g <Plug>(ale_previous_wrap)
noremap ]g <Plug>(ale_next_wrap)

" Insert Mode
inoremap jj <esc>
inoremap <Up> <nop>
inoremap <Down> <nop>
inoremap <Left> <nop>
inoremap <Right> <nop>

" Visual Mode

" }}}
" vim:foldmethod=marker:foldlevel=0
